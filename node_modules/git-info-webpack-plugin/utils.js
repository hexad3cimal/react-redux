const { exec, execSync } = require('child_process');
const path = require('path');

const removeEmptyLines = str => str.replace(/[\s\r\n]+$/, '');

function runGit(gitWorkTree, command, callback) {
  let gitCommand = [
    'git',
    command,
  ].join(' ');

  if (gitWorkTree) {
    gitCommand = [
      'git',
      `--git-dir=${path.join(gitWorkTree, '.git')}`,
      `--work-tree=${gitWorkTree}`,
      command,
    ].join(' ');
  }

  if (callback) {
    exec(gitCommand, (err, stdout) => {
      if (err) {
        return callback(err);
      }

      return callback(null, removeEmptyLines(stdout));
    });
  }

  return removeEmptyLines(`${execSync(gitCommand)}`);
}

function handleCompiler(compiler, worktree, command, replacePattern) {
  let data = '';

  compiler.plugin('compilation', (compilation) => {
    compilation.plugin('optimize-tree', (chunks, modules, callback) => {
      runGit(worktree, command, (err, res) => {
        if (err) {
          return callback(err);
        }
        data = res;

        return callback();
      });
    });

    compilation.mainTemplate.plugin('asset-path', output => output.replace(replacePattern, data));
  });
}

module.exports = {
  runGit,
  handleCompiler,
};
